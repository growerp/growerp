version: "2"

networks:
  my-network:
    driver: bridge

services:

  watch:
    image: containrrr/watchtower
    container_name: watch
    mem_limit: 100m
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=Asia/Bangkok
      - WATCHTOWER_DEBUG
      # check every 5mins
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_CLEANUP=true

  nginx-proxy:
    # For documentation on SSL and other settings see:
    # https://github.com/jwilder/nginx-proxy
    image: nginxproxy/nginx-proxy
    container_name: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./nginx/my_proxy.conf:/etc/nginx/conf.d/my_proxy.conf
      #- ./logs/nginx:/var/log/nginx
      #environment:
      # change this for the default host to use when accessing directly by IP, etc
      # use SSL_POLICY to disable TLSv1.0, etc in nginx-proxy
      # - SSL_POLICY=AWS-TLS-1-1-2017-01
    networks:
      - my-network

  moqui-server:
    image: growerp/growerp-moqui
    container_name: moqui
    build:
      context: ../moqui
    command: conf=conf/MoquiProductionConf.xml
    restart: always
    depends_on:
      - moqui-database
    volumes:
      #- ./MoquiProductionConf.xml:/opt/moqui/runtime/conf/MoquiProductionConf.xml
      #- ./runtime/lib:/opt/moqui/runtime/lib
      #- ./runtime/classes:/opt/moqui/runtime/classes
      #- ../moqui/runtime/component:/opt/moqui/runtime/component
      #- ./runtime/log:/opt/moqui/runtime/log
      #- ./runtime/txlog:/opt/moqui/runtime/txlog
      - ./runtime/sessions:/opt/moqui/runtime/sessions
      # this one isn't needed when not using H2/etc: - ./runtime/db:/opt/moqui/runtime/db
      - ./runtime/csstyles:/opt/moqui/runtime/component/PopRestStore/screen/store/components/styles
    environment:
      - instance_purpose=test
      - entity_ds_db_conf=postgres
      - entity_ds_host=moqui-database
      - entity_ds_port=5432
      - entity_ds_database=moqui
      - entity_ds_schema=public
      - entity_ds_user=moqui
      - entity_ds_password=moqui
      - entity_ds_crypt_pass='MoquiDefaultPassword:CHANGEME'
      # CHANGE ME - note that VIRTUAL_HOST is for nginx-proxy so it picks up this container as one it should reverse proxy
      # this can be a comma separate list of hosts like 'example.com,www.example.com'
      - VIRTUAL_HOST=*.growerp.local
      - webapp_allow_origins=*
      # moqui will accept traffic from other hosts but these are the values used for URL writing when specified:
      - webapp_http_host=
      - webapp_http_port=80
      - webapp_https_port=443
      - webapp_https_enabled=true
      # nginx-proxy populates X-Real-IP with remote_addr by default, better option for outer proxy than X-Forwarded-For which defaults to proxy_add_x_forwarded_for
      - webapp_client_ip_header=X-Real-IP
      - default_locale=en_US
      - default_time_zone=US/Pacific
      - DB_DATA=INSTALL
      # do not use quotes here
      - paymentGatewayConfigId=StripeDemo
      - STRIPE_SECRET_KEY=
      - SMTP_USER=
      - SMTP_PASSWORD=
      - BIRDSEND_API_KEY=
      - BIRDSEND_AUTM_SEQUENCE=
    networks:
      - my-network

  moqui-database:
    image: postgres:12.1
    container_name: postgres
    restart: always
    ports:
      # change this as needed to bind to any address or even comment to not expose port outside containers
      - 127.0.0.1:5432:5432
    volumes:
      # edit these as needed to map configuration and data storage
      - ./db/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=moqui
      - POSTGRES_DB_SCHEMA=public
      - POSTGRES_USER=moqui
      - POSTGRES_PASSWORD=moqui
    # PGDATA, POSTGRES_INITDB_ARGS
    networks:
      - my-network

  chat:
    container_name: chat
    image: growerp/chat
    build:
      context: ../chat
    mem_limit: 100m
    restart: unless-stopped
    expose:
      - 8080
    environment:
      - DATABASEBACKEND=https://backend.growerp.local
      - VIRTUAL_HOST=chat.growerp.local
      - VIRTUAL_PORT=8080
    external_links:
      - internet_gateway
    networks:
      - my-network

  # internet gateway required by chat to validate api_key with moqui
  internet_gateway:
    image: alpine # or any other suitable image
    container_name: gateway
    network_mode: host
    command: sh -c "sleep infinity"

  admin:
    container_name: admin
    image: growerp/admin
    build:
      context: ../flutter
      dockerfile: ../flutter/packages/admin/Dockerfile
    mem_limit: 10m
    restart: unless-stopped
    expose:
      - 80
    volumes:
      - ./app_settings.json:/usr/share/nginx/html/assets/assets/cfg/app_settings.json
    environment:
      - VIRTUAL_HOST=admin.growerp.local
    networks:
      - my-network

  hotel:
    container_name: hotel
    image: growerp/hotel
    build:
      context: ../flutter
      dockerfile: ../flutter/packages/hotel/Dockerfile
    mem_limit: 10m
    restart: unless-stopped
    expose:
      - 80
    volumes:
      - ./app_settings.json:/usr/share/nginx/html/assets/assets/cfg/app_settings.json
    environment:
      - VIRTUAL_HOST=hotel.growerp.local
    networks:
      - my-network
