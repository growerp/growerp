networks:
  my-network:
    driver: bridge

services:
  sut:
    image: test
    build: ../flutter
    container_name: test
    volumes:
      - ./test:/opt/growerp/test
    depends_on:
      - emulator
    networks:
      - my-network

  emulator:
    image: emulator
    container_name: emulator
    volumes:
      - ./test:/opt/growerp/test
    ports:
      - 8554/tcp
      - 5555/tcp
    depends_on:
      - moqui
      - chat
    privileged: true
    command:
      - bash
      - -c
      - |
        ./start_emu_headless.sh
    tty: true
    stdin_open: true
    networks:
      - my-network

  moqui:
    image: growerp/growerp-moqui
    container_name: moqui
    restart: always
    ports:
      - 127.0.0.1:80:80
    depends_on:
      - moqui-database
    volumes:
      #- ./MoquiProductionConf.xml:/opt/moqui/runtime/conf/MoquiProductionConf.xml
      #- ./runtime/lib:/opt/moqui/runtime/lib
      #- ./runtime/classes:/opt/moqui/runtime/classes
      #- ../moqui/runtime/component:/opt/moqui/runtime/component
      #- ./runtime/log:/opt/moqui/runtime/log
      #- ./runtime/txlog:/opt/moqui/runtime/txlog
      - ../docker/runtime/sessions:/opt/moqui/runtime/sessions
      # this one isn't needed when not using H2/etc: - ./runtime/db:/opt/moqui/runtime/db
      - ../docker/runtime/csstyles:/opt/moqui/runtime/component/PopRestStore/screen/store/components/styles
    environment:
      - instance_purpose=test
      - entity_ds_db_conf=postgres
      - entity_ds_host=moqui-database
      - entity_ds_port=5432
      - entity_ds_database=moqui
      - entity_ds_schema=public
      - entity_ds_user=moqui
      - entity_ds_password=moqui
      - entity_ds_crypt_pass='MoquiDefaultPassword:CHANGEME'
      # CHANGE ME - note that VIRTUAL_HOST is for nginx-proxy so it picks up this container as one it should reverse proxy
      # this can be a comma separate list of hosts like 'example.com,www.example.com'
      - webapp_allow_origins=*
      # moqui will accept traffic from other hosts but these are the values used for URL writing when specified:
      - webapp_http_host=
      - webapp_http_port=80
      # nginx-proxy populates X-Real-IP with remote_addr by default, better option for outer proxy than X-Forwarded-For which defaults to proxy_add_x_forwarded_for
      - webapp_client_ip_header=X-Real-IP
      - default_locale=en_US
      - default_time_zone=US/Pacific
      - DB_DATA=INSTALL
      # do not use quotes here
      - paymentGatewayConfigId=StripeDemo
      - STRIPE_SECRET_KEY=
      - SMTP_USER=
      - SMTP_PASSWORD=
      - BIRDSEND_API_KEY=
      - BIRDSEND_AUTM_SEQUENCE=
    networks:
      - my-network

  moqui-database:
    image: postgres:12.1
    container_name: postgres
    restart: always
    ports:
      # change this as needed to bind to any address or even comment to not expose port outside containers
      - 127.0.0.1:5432:5432
    volumes:
      # edit these as needed to map configuration and data storage
      - ../docker/db/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=moqui
      - POSTGRES_DB_SCHEMA=public
      - POSTGRES_USER=moqui
      - POSTGRES_PASSWORD=moqui
    # PGDATA, POSTGRES_INITDB_ARGS
    networks:
      - my-network

  chat:
    container_name: chat
    image: growerp/chat
    mem_limit: 100m
    restart: unless-stopped
    expose:
      - 8080
    environment:
      - DATABASEBACKEND=http://moqui
    external_links:
      - internet_gateway
    networks:
      - my-network

  # internet gateway required by chat to validate api_key with moqui
  internet_gateway:
    image: alpine # or any other suitable image
    container_name: gateway
    network_mode: host
    command: sh -c "sleep infinity"
